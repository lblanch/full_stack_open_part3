{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","handleDelete","name","number","onClick","id","Persons","persons","map","Filter","filter","handleChangeFilter","value","onChange","PersonForm","props","newName","handleChangeName","newNumber","handleChangeNumber","type","handleAddPersonClick","Notification","message","length","className","baseUrl","axios","get","then","response","data","newPerson","post","modifiedPerson","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setType","filteredPersons","match","RegExp","showInfoMessage","setTimeout","showErrorMessage","useEffect","personsService","catch","error","event","target","preventDefault","foundPerson","find","undefined","concat","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d27c644f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, handleDelete}) => (\n    <div>\n        {person.name} {person.number}\n        <button onClick={() => handleDelete(person.id, person.name)}>delete</button>\n    </div>\n)\n\nconst Persons = ({persons, handleDelete}) => (\n    persons.map((person) => (\n        <Person key={person.name} person={person} handleDelete={handleDelete} />\n    ))\n)\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({filter, handleChangeFilter}) => (\n    <div>filter shown with <input value={filter} onChange={handleChangeFilter} /></div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => (\n    <form>\n        <div>name: <input value={props.newName} onChange={props.handleChangeName} /></div>\n        <div>number: <input value={props.newNumber} onChange={props.handleChangeNumber} /></div>\n        <div>\n            <button type=\"submit\" onClick={props.handleAddPersonClick}>add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({message, type}) => {\n    if (message.length === 0) {\n        return null\n    }\n\n    return (\n        <div className={`notification ${type}`}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => (\n    axios.get(baseUrl)\n        .then((response) => response.data)\n)\n\nconst createPerson = (newPerson) => (\n    axios.post(baseUrl, newPerson)\n        .then((response) => response.data)\n)\n\nconst updatePerson = (modifiedPerson, id) => (\n    axios.put(`${baseUrl}/${id}`, modifiedPerson)\n        .then((response) => response.data)\n)\n\nconst deletePerson = (id) => axios.delete(`${baseUrl}/${id}`)\n\nexport default { getAll, createPerson, updatePerson, deletePerson }","import React, { useEffect, useState } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personsService from './services/persons'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [ message, setMessage ] = useState('')\n    const [ type, setType ] = useState('info')\n    const filteredPersons = persons.filter((person) => person.name.match(new RegExp(filter,\"i\")))\n\n    const showInfoMessage = (message) => {\n        setType('info')\n        setMessage(message)\n        setTimeout(() => {\n            setMessage('')\n        }, 5000)\n    }\n\n    const showErrorMessage = (message) => {\n        setType('error')\n        setMessage(message)\n        setTimeout(() => {\n            setMessage('')\n        }, 5000)\n    }\n\n    const handleChangeName = (event) => setNewName(event.target.value)\n    const handleChangeNumber = (event) => setNewNumber(event.target.value)\n    const handleChangeFilter = (event) => setFilter(event.target.value)\n    const handleDelete = (id, name) => {\n        if(window.confirm(`Delete ${name}?`)) {\n            personsService.deletePerson(id)\n                .then(() => {\n                    setPersons(persons.filter((person) => person.id !== id))\n                    showInfoMessage(`Deleted ${name}`)\n                })\n                .catch(error => {\n                    showErrorMessage(`There was an error deleting ${name}: ${error.response.data.error}`)\n                })\n        }\n    }\n    const handleAddPersonClick = (event) => {\n        event.preventDefault()\n        \n        const newPerson = { \n            name: newName,\n            number: newNumber\n        }\n\n        const foundPerson = persons.find((person) => person.name === newName)\n        if (foundPerson !== undefined) {\n            if (!window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n                return\n            }\n            personsService.updatePerson(newPerson, foundPerson.id)\n                .then(response => {\n                    setPersons(persons.map(person => person.id !== foundPerson.id ? person : response))\n                    setNewName('')\n                    setNewNumber('')\n                    showInfoMessage(`Updated ${response.name}`)\n                })\n                .catch(error => {\n                    showErrorMessage(`There was an error updating ${newPerson.name}: ${error.response.data.error}`)\n                })\n\n            return\n        }\n\n        personsService.createPerson(newPerson)\n            .then(response => {\n                setPersons(persons.concat(response))\n                setNewName('')\n                setNewNumber('')\n                showInfoMessage(`Added ${response.name}`)\n            })\n            .catch(error => {\n                showErrorMessage(`There was an error adding ${newPerson.name}: ${error.response.data.error}`)\n            })\n    }\n\n    useEffect(() => personsService.getAll()\n                        .then(response => setPersons(response))\n                        .catch(error => showErrorMessage(`There was an error fetching data from the server: ${error.message}`))\n    , [])\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={message} type={type} />\n            <Filter filter={filter} handleChangeFilter={handleChangeFilter} />\n            <h2>add a new entry</h2>\n            <PersonForm \n                newName={newName}\n                newNumber={newNumber}\n                handleChangeName={handleChangeName}\n                handleChangeNumber={handleChangeNumber}\n                handleAddPersonClick={handleAddPersonClick}\n            />\n            <h2>Numbers</h2>\n            <Persons persons={filteredPersons} handleDelete={handleDelete} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}